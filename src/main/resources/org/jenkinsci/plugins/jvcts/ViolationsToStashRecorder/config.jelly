<?xml version="1.0" encoding="UTF-8"?>
<?jelly escape-by-default='true'?>
<j:jelly xmlns:j="jelly:core"
  xmlns:d="jelly:define"
  xmlns:f="/lib/form"
  xmlns:l="/lib/layout"
  xmlns:st="jelly:stapler"
  xmlns:t="/lib/hudson">

  <!-- descriptor is ViolationsToStashDescriptor //-->
  <j:set var="config" value="${descriptor.newConfig}"/>
  <j:if test="${instance != null}">
    <!-- instance is ViolationsToStashRecorder //-->
    <j:set var="config" value="${instance.config}"/>
  </j:if>
  
  

  <f:entry>
    <table>
      <tr>
        <td>
          Stash server
        </td>
      </tr>
    </table>
  </f:entry>

  <f:entry title="User">
    <f:textbox name="stashUser" value="${config.stashUser}" />
  </f:entry>

  <f:entry title="Password">
    <f:password name="stashPassword" value="${config.stashPassword}" />
  </f:entry>

  <f:entry title="Base URL">
    <f:textbox name="stashBaseUrl" value="${config.stashBaseUrl}" />
  </f:entry>
  
  <f:entry title="Project">
    <f:textbox name="stashProject" value="${config.stashProject}" />
  </f:entry>
  
  <f:entry title="Repository">
    <f:textbox name="stashRepo" value="${config.stashRepo}" />
  </f:entry>
  
  <f:entry title="(Optional) Pull Request ID, if you want to comment on the pull request">
    <f:textbox name="stashPullRequestId" value="${config.stashPullRequestId}" />
  </f:entry>
  
  <f:entry title="(Optional) Commit hash, if you want to comment on the commit">
    <f:textbox name="commitHash" value="${config.commitHash}" />
  </f:entry>


  <f:entry>
  <table class="xmlFilenamePatterns">
    <tr>
      <td align="left" colspan="2">
        <b>XML filename pattern</b>
        <ul>
          <li>The pattern may be, for example, <i>**/checkstyle-report.xml</i> to match checkstyle-report.xml anywhere in workspace.</li>
          <li>The path prefix is optional. Some checkers may have relative paths in the reports (xml-files). Stash API:s will report changes, in the pull request, relative to repository root. In order to match changes in pull request to file in report, you may need to set a prefix path.</li>
        </ul>
      </td>
    </tr>
    <tr>
      <th align="left" width="300">
        Pattern
      </th>
      <th align="left">
        Path prefix
      </th>
    </tr>
  </table>
  </f:entry>

  <j:forEach var="parserConfig" items="${config.parserConfigs}" indexVar="i">
    <f:entry title="${parserConfig.parserTypeDescriptor.name}">
    <table cellspacing="5">
      <tr>
        <td width="300">
          <f:textbox name="descriptor.config.parserConfigs[${i}].pattern" value="${parserConfig.pattern}" />
        </td>
        <td width="200">
          <f:textbox name="descriptor.config.parserConfigs[${i}].pathPrefix" value="${parserConfig.pathPrefix}" />
        </td>
      </tr>
    </table>
    </f:entry>
  </j:forEach>

</j:jelly>
