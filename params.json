{
  "name": "Violation-comments-to-stash-plugin",
  "tagline": "Analyzes Jenkins workspace to find code analyzer report files, comments Bitbucket Server (or Stash) pull requests with code analyzer comments.",
  "body": "# Violation Comments to Bitbucket Server\r\n\r\n[![Build Status](https://jenkins.ci.cloudbees.com/job/plugins/job/violation-comments-to-stash-plugin/badge/icon)](https://jenkins.ci.cloudbees.com/job/plugins/job/violation-comments-to-stash-plugin/)\r\n\r\nIt comments pull requests in  Bitbucket Server (or Stash) with violations found in report files from static code analysis.\r\n\r\nIt uses [Violation Comments to Bitbucket Server Lib](https://github.com/tomasbjerre/violation-comments-to-bitbucket-server-lib) and supports the same formats as [Violations Lib](https://github.com/tomasbjerre/violations-lib).\r\n\r\nThe pull request will be commented like this.\r\n\r\n![Pull request comment](https://raw.githubusercontent.com/jenkinsci/violation-comments-to-stash-plugin/master/sandbox/screenshot-stash.png)\r\n\r\nAvailable in Jenkins [here](https://wiki.jenkins-ci.org/display/JENKINS/Violation+Comments+to+Bitbucket+Server+Plugin).\r\n\r\n## Example use case\r\nHere is an example use case where a pull request is triggered from Bitbucket Server, merged, checked and comments added to pull request in Bitbucket Server.\r\n\r\nYou may also use it for an ordinary build job, to simply comment the commit that was built.\r\n\r\n### Notify Jenkins from Bitbucket Server\r\nYou may use [Pull Request Notifier for Bitbucket Server](https://github.com/tomasbjerre/pull-request-notifier-for-bitbucket) to trigger a Jenkins build from an event in Bitbucket Server. It can supply any parameters and variables you may need. Here is an example URL.\r\n\r\n```\r\nhttp://localhost:8080/jenkins/job/builder/buildWithParameters?FROM=${PULL_REQUEST_FROM_HASH}&TO=${PULL_REQUEST_TO_HASH}&TOSLUG=${PULL_REQUEST_TO_REPO_SLUG}&TOREPO=${PULL_REQUEST_TO_HTTP_CLONE_URL}&FROMREPO=${PULL_REQUEST_FROM_HTTP_CLONE_URL}&ID=${PULL_REQUEST_ID}&PROJECT=${PULL_REQUEST_TO_REPO_PROJECT_KEY}\r\n```\r\n\r\n### Jenkins job\r\nThe Jenkins job may perform the merge, and run any checkers on it, with a shell script build step. It needs to be a parameterized build. To match URL in example above, these parameters are needed.\r\n * ID\r\n * TO\r\n * TOSLUG\r\n * TOREPO\r\n * FROM\r\n * FROMREPO\r\n * PROJECT\r\n\r\nThe shell script may look like this.\r\n\r\n```\r\necho ---\r\necho --- Mergar from $FROM in $FROMREPO to $TO in $TOREPO\r\necho ---\r\ngit clone $TOREPO\r\ncd *\r\ngit reset --hard $TO\r\ngit status\r\ngit remote add from $FROMREPO\r\ngit fetch from\r\ngit merge $FROM\r\ngit --no-pager log --max-count=10 --graph --abbrev-commit\r\n\r\nyour build command here!\r\n```\r\n\r\n### Configure plugin\r\nThis plugin may be added as a post build step to analyze the workspace and report comments back to pull request in Bitbucket Server. [Here](https://raw.githubusercontent.com/tomasbjerre/violation-comments-to-stash-plugin/master/sandbox/screenshot-config.png) is an example of how that may look like.\r\n\r\n### The result\r\nAnd finally [here](https://raw.githubusercontent.com/tomasbjerre/violation-comments-to-stash-plugin/master/sandbox/screenshot-stash.png) is an example Bitbucket Server comment.\r\n\r\n## Job DSL Plugin\r\n\r\nThis plugin can be used with the Job DSL Plugin.\r\n\r\n```\r\njob('example') {\r\n publishers {\r\n  violationsToBitbucketServerRecorder {\r\n   config {\r\n    createSingleFileComments(true)\r\n    createCommentWithAllSingleFileComments(true)\r\n    projectKey(\"PROJECT_1\")\r\n    repoSlug(\"repo_1\")\r\n    password(\"admin\")\r\n    username(\"admin\")\r\n    pullRequestId(\"1\")\r\n    bitbucketServerUrl(\"http://localhost:7990/bitbucket\")\r\n    usernamePasswordCredentialsId(null)\r\n    useUsernamePasswordCredentials(false)\r\n    useUsernamePassword(true)\r\n    violationConfigs {\r\n     violationConfig {\r\n      reporter(\"FINDBUGS\")\r\n      pattern(\".*/findbugs/.*\\\\.xml\\$\")\r\n     }\r\n    }\r\n   }\r\n  }\r\n }\r\n}\r\n```\r\n\r\n## Pipeline Plugin\r\n\r\nThis plugin can be used with the Pipeline Plugin:\r\n\r\n```\r\n\r\nnode {\r\n\r\n sh '''\r\n rm -rf rep_1\r\n git clone http://admin:admin@localhost:7990/bitbucket/scm/project_1/rep_1.git\r\n cd *\r\n ./gradlew build\r\n '''\r\n\r\n step([\r\n  $class: 'ViolationsToBitbucketServerRecorder', \r\n  config: [\r\n   bitbucketServerUrl: 'http://localhost:7990/bitbucket', \r\n   createCommentWithAllSingleFileComments: true, \r\n   createSingleFileComments: true, \r\n   projectKey: 'PROJECT_1', \r\n   repoSlug: 'rep_1', \r\n   pullRequestId: '1', \r\n   useUsernamePassword: true, \r\n   username: 'admin', \r\n   password: 'admin', \r\n   useUsernamePasswordCredentials: false, \r\n   violationConfigs: [\r\n    [ pattern: '.*/checkstyle/.*\\\\.xml$', reporter: 'CHECKSTYLE' ], \r\n    [ pattern: '.*/findbugs/.*\\\\.xml$', reporter: 'FINDBUGS' ], \r\n   ]\r\n  ]\r\n ])\r\n}\r\n```\r\n\r\n## Developer instructions\r\nInstructions for developers.\r\n\r\n### Get the code\r\n\r\n```\r\ngit clone git@github.com:tomasbjerre/violation-comments-to-stash-plugin.git\r\n```\r\n\r\n### Plugin development\r\nMore details on Jenkins plugin development is available [here](https://wiki.jenkins-ci.org/display/JENKINS/Plugin+tutorial).\r\n\r\nThere is a ```/build.sh``` that will perform a full build and test the plugin.\r\n\r\nSome tests are implemented in maven project in ```/plugin-test```. This is to avoid classpath issues with the plugin. These are web tests that will start Jenkins with the plugin on localhost and perform some configuration tests.\r\n\r\nA release is created like this. You need to clone from jenkinsci-repo, with https and have username/password in settings.xml.\r\n```\r\nmvn release:prepare release:perform\r\n```\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}